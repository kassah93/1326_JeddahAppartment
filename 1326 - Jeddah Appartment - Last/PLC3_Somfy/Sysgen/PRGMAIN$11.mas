#srcfile 'E:\PROJECTS\PROJECTS\1326 - OSAMA - JEDDAH APPARTMENT - DREAMS TOWERS\IMPLEMENTATION\CODES\MOSAIC\1326 - JEDDAH APPARTMENT - LAST\PLC3_SOMFY\PRGMAIN.ST'

; Global variables
#rem  fb_iJalousie curtainsFB[14]
#rem  TSomfyRTSPacket packetsBuffer[5]
#rem  uint buffIndex

; Global types
#struct  TEnCurtainRT
  R_TRIG UP,
  R_TRIG DW,
  R_TRIG STOP

#defpou prgMain
  TEnCurtain[14] EnCurtains,
  TEnCurtainRT[14] EnCurtains_RT,
  usint i,
  usint curIndex,
  TVendorID Trsnsmitter1_ID,
  TVendorID Trsnsmitter2_ID,
  TVendorID HostID,
  bool test,
  bool up,
  bool dw,
  bool stop,
  bool block,
  R_TRIG up_RT,
  R_TRIG dw_RT

#table byte __Init____curtainsFB = 
      0,  0, 32, 78,  0,  0,244,  1,  0,  0,232,  3,  0,  0, 16, 39,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0, 32, 78,  0,  0,244,  1,  0,  0,232,  3,  0,  0, 16, 39,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0, 32, 78,  0,  0,244,  1,  0,  0,232,  3,  0,
      0, 16, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 32, 78,  0,  0,244,  1,  0,
      0,232,  3,  0,  0, 16, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 32, 78,  0,
      0,244,  1,  0,  0,232,  3,  0,  0, 16, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0, 32, 78,  0,  0,244,  1,  0,  0,232,  3,  0,  0, 16, 39,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0, 32, 78,  0,  0,244,  1,  0,  0,232,  3,  0,  0, 16, 39,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0, 32, 78,  0,  0,244,  1,  0,  0,232,  3,  0,
      0, 16, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 32, 78,  0,  0,244,  1,  0,
      0,232,  3,  0,  0, 16, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 32, 78,  0,
      0,244,  1,  0,  0,232,  3,  0,  0, 16, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0, 32, 78,  0,  0,244,  1,  0,  0,232,  3,  0,  0, 16, 39,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0, 32, 78,  0,  0,244,  1,  0,  0,232,  3,  0,  0, 16, 39,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0, 32, 78,  0,  0,244,  1,  0,  0,232,  3,  0,
      0, 16, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 32, 78,  0,  0,244,  1,  0,
      0,232,  3,  0,  0, 16, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  4;
 
#srcfile 'E:\PROJECTS\PROJECTS\1326 - OSAMA - JEDDAH APPARTMENT - DREAMS TOWERS\IMPLEMENTATION\CODES\MOSAIC\1326 - JEDDAH APPARTMENT - LAST\PLC3_SOMFY\PRGMAIN.ST'
#pou prgMain
#srcline 15 ;PROGRAM prgMain

#struct prgMain__temp__
  usint P0__st__,
  udint P1__st__,
  udint P2__st__,
  udint P3__st__,
  udint P4__st__,
  udint P5__st__
P     61
prgMain_L0:
 LINK __SizeOf(prgMain__temp__)
; Initialize - dynamic variables
; End initialize - dynamic variables
#srcline 38 ;  for i := 1 to numOfCurtains do
 LD   usint 1
 WRX  i
 LD   usint 14
 WRY  P0__st__
prgMain_L1:
 LDX  i
 LDY  P0__st__
 GT   
 JMD  prgMain_L2
 DBG  
#srcline 39 ;      if i <= numOfCurtains_PLC1 then
 LDX  i
#debug usint i
 LD   usint 9
 GT
 NEG
 JMC  prgMain_L3
#srcline 40 ;         EnCurtains[i] := PLC1_EnCurtains[i];
 LEA  PLC1_EnCurtains
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 8   ; Range Check
 ADD     ; + offset 
#debug pointer PLC1_EnCurtains[i]
 SRC  %IB0
 LEAX EnCurtains
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 ADD     ; + offset 
#debug_left pointer EnCurtains[i]
 LD   1   ;SizeOf() 
 MOV  %IB0
#srcline 41 ;      else
 JMP  prgMain_L4
prgMain_L3:
#srcline 42 ;         EnCurtains[i] := PLC2_EnCurtains[i - numOfCurtains_PLC1];
 LEA  PLC2_EnCurtains
 LDX  i
#debug usint i
 LD   usint 9
 SUB
 AND  $FF
 SUB  1   ; Low range[1]
 RCHK 4   ; Range Check
 ADD     ; + offset 
#debug pointer PLC2_EnCurtains[i-numOfCurtains_PLC1]
 SRC  %IB0
 LEAX EnCurtains
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 ADD     ; + offset 
#debug_left pointer EnCurtains[i]
 LD   1   ;SizeOf() 
 MOV  %IB0
#srcline 43 ;      end_if;
prgMain_L4:
#srcline 44 ;      
#srcline 45 ;      EnCurtains_RT[i].UP(CLK := EnCurtains[i].UP);
 LEAX EnCurtains_RT
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  3   ; SizeOf(...)
 ADD     ; + offset 
 WRY  P1__st__  ; offset instance
 LEAX EnCurtains
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 ADD     ; + offset 
 MUL  8   ; -> bool pointer 
 LDIB 
#debug bool EnCurtains[i].UP
 LDY  P1__st__  ; offset instance
 MUL  8   ; -> bool pointer 
 WRIB 
 LDY  P1__st__  ; offset instance
 CAL  R_TRIG_L0
#srcline 46 ;      EnCurtains_RT[i].DW(CLK := EnCurtains[i].DW);
 LEAX EnCurtains_RT
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  3   ; SizeOf(...)
 ADD     ; + offset 
 ADD  1  ; + offset 
 WRY  P2__st__  ; offset instance
 LEAX EnCurtains
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 ADD     ; + offset 
 MUL  8   ; -> bool pointer 
 ADD  1   ; Bool offset 
 LDIB 
#debug bool EnCurtains[i].DW
 LDY  P2__st__  ; offset instance
 MUL  8   ; -> bool pointer 
 WRIB 
 LDY  P2__st__  ; offset instance
 CAL  R_TRIG_L0
#srcline 47 ;      EnCurtains_RT[i].STOP(CLK := EnCurtains[i].STOP);
 LEAX EnCurtains_RT
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  3   ; SizeOf(...)
 ADD     ; + offset 
 ADD  2  ; + offset 
 WRY  P3__st__  ; offset instance
 LEAX EnCurtains
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 ADD     ; + offset 
 MUL  8   ; -> bool pointer 
 ADD  2   ; Bool offset 
 LDIB 
#debug bool EnCurtains[i].STOP
 LDY  P3__st__  ; offset instance
 MUL  8   ; -> bool pointer 
 WRIB 
 LDY  P3__st__  ; offset instance
 CAL  R_TRIG_L0
#srcline 48 ;      
#srcline 49 ;      
#srcline 50 ;      // Generate RTS control packets
#srcline 51 ;      if EnCurtains_RT[i].UP.Q then
 LEAX EnCurtains_RT
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  3   ; SizeOf(...)
 ADD     ; + offset 
 MUL  8   ; -> bool pointer 
 ADD  1   ; Bool offset 
 LDIB 
#debug bool EnCurtains_RT[i].UP.Q
 JMC  prgMain_L5
#srcline 52 ;         fbSomfyRTS_Cmnd(ChNum := i, HostID := HostID, TrsnsmitterID := Trsnsmitter1_ID, UP := 1,  packetsBuffer := packetsBuffer, buffIndex := buffIndex);
 NXT
 LDX  i
#debug usint i
 WR   __Instance__fbSomfyRTS_Cmnd~ChNum
#debug_left usint __Instance__fbSomfyRTS_Cmnd~ChNum
 LEAX HostID
#debug pointer HostID
 SRC  %IB0
 LEA  __Instance__fbSomfyRTS_Cmnd~HostID
#debug_left pointer __Instance__fbSomfyRTS_Cmnd~HostID
 LD   3   ;SizeOf() 
 MOV  %IB0
 LEAX Trsnsmitter1_ID
#debug pointer Trsnsmitter1_ID
 SRC  %IB0
 LEA  __Instance__fbSomfyRTS_Cmnd~TrsnsmitterID
#debug_left pointer __Instance__fbSomfyRTS_Cmnd~TrsnsmitterID
 LD   3   ;SizeOf() 
 MOV  %IB0
 LD   1
 WR   __Instance__fbSomfyRTS_Cmnd~UP
#debug_left bool __Instance__fbSomfyRTS_Cmnd~UP
 LEA  packetsBuffer
 WR   __Instance__fbSomfyRTS_Cmnd~packetsBuffer
#debug_left pointer __Instance__fbSomfyRTS_Cmnd.packetsBuffer
 LEA  buffIndex
 WR   __Instance__fbSomfyRTS_Cmnd~buffIndex
#debug_left pointer __Instance__fbSomfyRTS_Cmnd.buffIndex
 LD   0
 WR   __Instance__fbSomfyRTS_Cmnd~DW
 WR   __Instance__fbSomfyRTS_Cmnd~favPos
 WR   __Instance__fbSomfyRTS_Cmnd~stop
 WR   __Instance__fbSomfyRTS_Cmnd~setChannel
 WR   __Instance__fbSomfyRTS_Cmnd~openProg
 WR   __Instance__fbSomfyRTS_Cmnd~set_IP
 PRV
 LEA  __Instance__fbSomfyRTS_Cmnd
 CAL  fbSomfyRTS_Cmnd_L0
#srcline 53 ;      end_if;
prgMain_L5:
#srcline 54 ;      
#srcline 55 ;       if EnCurtains_RT[i].DW.Q then
 LEAX EnCurtains_RT
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  3   ; SizeOf(...)
 ADD     ; + offset 
 ADD  1  ; + offset 
 MUL  8   ; -> bool pointer 
 ADD  1   ; Bool offset 
 LDIB 
#debug bool EnCurtains_RT[i].DW.Q
 JMC  prgMain_L7
#srcline 56 ;         fbSomfyRTS_Cmnd(ChNum := i, HostID := HostID, TrsnsmitterID := Trsnsmitter1_ID, DW := 1,  packetsBuffer := packetsBuffer, buffIndex := buffIndex);
 NXT
 LDX  i
#debug usint i
 WR   __Instance__fbSomfyRTS_Cmnd~ChNum
#debug_left usint __Instance__fbSomfyRTS_Cmnd~ChNum
 LEAX HostID
#debug pointer HostID
 SRC  %IB0
 LEA  __Instance__fbSomfyRTS_Cmnd~HostID
#debug_left pointer __Instance__fbSomfyRTS_Cmnd~HostID
 LD   3   ;SizeOf() 
 MOV  %IB0
 LEAX Trsnsmitter1_ID
#debug pointer Trsnsmitter1_ID
 SRC  %IB0
 LEA  __Instance__fbSomfyRTS_Cmnd~TrsnsmitterID
#debug_left pointer __Instance__fbSomfyRTS_Cmnd~TrsnsmitterID
 LD   3   ;SizeOf() 
 MOV  %IB0
 LD   1
 WR   __Instance__fbSomfyRTS_Cmnd~DW
#debug_left bool __Instance__fbSomfyRTS_Cmnd~DW
 LEA  packetsBuffer
 WR   __Instance__fbSomfyRTS_Cmnd~packetsBuffer
#debug_left pointer __Instance__fbSomfyRTS_Cmnd.packetsBuffer
 LEA  buffIndex
 WR   __Instance__fbSomfyRTS_Cmnd~buffIndex
#debug_left pointer __Instance__fbSomfyRTS_Cmnd.buffIndex
 LD   0
 WR   __Instance__fbSomfyRTS_Cmnd~UP
 WR   __Instance__fbSomfyRTS_Cmnd~favPos
 WR   __Instance__fbSomfyRTS_Cmnd~stop
 WR   __Instance__fbSomfyRTS_Cmnd~setChannel
 WR   __Instance__fbSomfyRTS_Cmnd~openProg
 WR   __Instance__fbSomfyRTS_Cmnd~set_IP
 PRV
 LEA  __Instance__fbSomfyRTS_Cmnd
 CAL  fbSomfyRTS_Cmnd_L0
#srcline 57 ;      end_if;
prgMain_L7:
#srcline 58 ;      
#srcline 59 ;       if EnCurtains_RT[i].STOP.Q then
 LEAX EnCurtains_RT
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  3   ; SizeOf(...)
 ADD     ; + offset 
 ADD  2  ; + offset 
 MUL  8   ; -> bool pointer 
 ADD  1   ; Bool offset 
 LDIB 
#debug bool EnCurtains_RT[i].STOP.Q
 JMC  prgMain_L9
#srcline 60 ;         fbSomfyRTS_Cmnd(ChNum := i, HostID := HostID, TrsnsmitterID := Trsnsmitter1_ID, stop := 1,  packetsBuffer := packetsBuffer, buffIndex := buffIndex);
 NXT
 LDX  i
#debug usint i
 WR   __Instance__fbSomfyRTS_Cmnd~ChNum
#debug_left usint __Instance__fbSomfyRTS_Cmnd~ChNum
 LEAX HostID
#debug pointer HostID
 SRC  %IB0
 LEA  __Instance__fbSomfyRTS_Cmnd~HostID
#debug_left pointer __Instance__fbSomfyRTS_Cmnd~HostID
 LD   3   ;SizeOf() 
 MOV  %IB0
 LEAX Trsnsmitter1_ID
#debug pointer Trsnsmitter1_ID
 SRC  %IB0
 LEA  __Instance__fbSomfyRTS_Cmnd~TrsnsmitterID
#debug_left pointer __Instance__fbSomfyRTS_Cmnd~TrsnsmitterID
 LD   3   ;SizeOf() 
 MOV  %IB0
 LD   1
 WR   __Instance__fbSomfyRTS_Cmnd~stop
#debug_left bool __Instance__fbSomfyRTS_Cmnd~stop
 LEA  packetsBuffer
 WR   __Instance__fbSomfyRTS_Cmnd~packetsBuffer
#debug_left pointer __Instance__fbSomfyRTS_Cmnd.packetsBuffer
 LEA  buffIndex
 WR   __Instance__fbSomfyRTS_Cmnd~buffIndex
#debug_left pointer __Instance__fbSomfyRTS_Cmnd.buffIndex
 LD   0
 WR   __Instance__fbSomfyRTS_Cmnd~UP
 WR   __Instance__fbSomfyRTS_Cmnd~DW
 WR   __Instance__fbSomfyRTS_Cmnd~favPos
 WR   __Instance__fbSomfyRTS_Cmnd~setChannel
 WR   __Instance__fbSomfyRTS_Cmnd~openProg
 WR   __Instance__fbSomfyRTS_Cmnd~set_IP
 PRV
 LEA  __Instance__fbSomfyRTS_Cmnd
 CAL  fbSomfyRTS_Cmnd_L0
#srcline 61 ;      end_if;
prgMain_L9:
#srcline 64 ;      // handle curtains status
#srcline 65 ;      if (EnCurtains_RT[i].UP.Q and curtainsFB[i].outDw) or (EnCurtains_RT[i].DW.Q and curtainsFB[i].outUp) then
 LEAX EnCurtains_RT
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  3   ; SizeOf(...)
 ADD     ; + offset 
 MUL  8   ; -> bool pointer 
 ADD  1   ; Bool offset 
 LDIB 
#debug bool EnCurtains_RT[i].UP.Q
 LEA  curtainsFB
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  124   ; SizeOf(...)
 ADD     ; + offset 
 ADD  43  ; + offset 
 MUL  8   ; -> bool pointer 
 ADD  1   ; Bool offset 
 LDIB 
#debug bool curtainsFB[i].outDw
 AND
 LEAX EnCurtains_RT
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  3   ; SizeOf(...)
 ADD     ; + offset 
 ADD  1  ; + offset 
 MUL  8   ; -> bool pointer 
 ADD  1   ; Bool offset 
 LDIB 
#debug bool EnCurtains_RT[i].DW.Q
 LEA  curtainsFB
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  124   ; SizeOf(...)
 ADD     ; + offset 
 ADD  43  ; + offset 
 MUL  8   ; -> bool pointer 
 LDIB 
#debug bool curtainsFB[i].outUp
 AND
 OR  
 JMC  prgMain_L11
#srcline 66 ;         curtainsFB[i].up := 0;
 LD   bool 0       ; false
 LEA  curtainsFB
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  124   ; SizeOf(...)
 ADD     ; + offset 
 MUL  8   ; -> bool pointer 
 ADD  1   ; Bool offset 
 WRIB 
#debug_left bool curtainsFB[i].up
#srcline 67 ;         curtainsFB[i].dw := 0;
 LD   bool 0       ; false
 LEA  curtainsFB
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  124   ; SizeOf(...)
 ADD     ; + offset 
 MUL  8   ; -> bool pointer 
 ADD  3   ; Bool offset 
 WRIB 
#debug_left bool curtainsFB[i].dw
#srcline 68 ;         curtainsFB[i](stop := 1, upDwTime := curtUpDwTime) ;
 LEA  curtainsFB
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  124   ; SizeOf(...)
 ADD     ; + offset 
 WRY  P4__st__  ; offset instance
 LD   1
 LDY  P4__st__  ; offset instance
 MUL  8   ; -> bool pointer 
 ADD  5   ; Bool offset 
 WRIB 
 LD   time 18000
 LDY  P4__st__  ; offset instance
 ADD  2  ; + offset
 WRIL 
 LDY  P4__st__  ; offset instance
 CAL  fb_iJalousie_L0
#srcline 69 ;      else
 JMP  prgMain_L12
prgMain_L11:
#srcline 70 ;         curtainsFB[i](up := EnCurtains[i].UP, dw := EnCurtains[i].DW, stop := EnCurtains[i].STOP, upDwTime := curtUpDwTime) ;
 LEA  curtainsFB
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  124   ; SizeOf(...)
 ADD     ; + offset 
 WRY  P5__st__  ; offset instance
 LEAX EnCurtains
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 ADD     ; + offset 
 MUL  8   ; -> bool pointer 
 LDIB 
#debug bool EnCurtains[i].UP
 LDY  P5__st__  ; offset instance
 MUL  8   ; -> bool pointer 
 ADD  1   ; Bool offset 
 WRIB 
 LEAX EnCurtains
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 ADD     ; + offset 
 MUL  8   ; -> bool pointer 
 ADD  1   ; Bool offset 
 LDIB 
#debug bool EnCurtains[i].DW
 LDY  P5__st__  ; offset instance
 MUL  8   ; -> bool pointer 
 ADD  3   ; Bool offset 
 WRIB 
 LEAX EnCurtains
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 ADD     ; + offset 
 MUL  8   ; -> bool pointer 
 ADD  2   ; Bool offset 
 LDIB 
#debug bool EnCurtains[i].STOP
 LDY  P5__st__  ; offset instance
 MUL  8   ; -> bool pointer 
 ADD  5   ; Bool offset 
 WRIB 
 LD   time 18000
 LDY  P5__st__  ; offset instance
 ADD  2  ; + offset
 WRIL 
 LDY  P5__st__  ; offset instance
 CAL  fb_iJalousie_L0
#srcline 71 ;      end_if;
prgMain_L12:
#srcline 72 ;      
#srcline 73 ;      curtainsStatus[i].outUP   := curtainsFB[i].outUp;
 LEA  curtainsFB
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  124   ; SizeOf(...)
 ADD     ; + offset 
 ADD  43  ; + offset 
 MUL  8   ; -> bool pointer 
 LDIB 
#debug bool curtainsFB[i].outUp
 LEA  curtainsStatus
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  3   ; SizeOf(...)
 ADD     ; + offset 
 MUL  8   ; -> bool pointer 
 WRIB 
#debug_left bool curtainsStatus[i].outUP
#srcline 74 ;      curtainsStatus[i].outDW   := curtainsFB[i].outDw;
 LEA  curtainsFB
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  124   ; SizeOf(...)
 ADD     ; + offset 
 ADD  43  ; + offset 
 MUL  8   ; -> bool pointer 
 ADD  1   ; Bool offset 
 LDIB 
#debug bool curtainsFB[i].outDw
 LEA  curtainsStatus
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  3   ; SizeOf(...)
 ADD     ; + offset 
 MUL  8   ; -> bool pointer 
 ADD  1   ; Bool offset 
 WRIB 
#debug_left bool curtainsStatus[i].outDW
#srcline 75 ;      curtainsStatus[i].pos     := 100 - curtainsFB[i].posit;
 LD   usint 100
 LEA  curtainsFB
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  124   ; SizeOf(...)
 ADD     ; + offset 
 ADD  45  ; + offset 
 LDI  
#debug usint curtainsFB[i].posit
 SUB
 AND  $FF
 LEA  curtainsStatus
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  3   ; SizeOf(...)
 ADD     ; + offset 
 ADD  1  ; + offset 
 WRI 
#debug_left usint curtainsStatus[i].pos
#srcline 76 ;      curtainsStatus[i].normPos := curtainsStatus[i].pos / 25;
 LEA  curtainsStatus
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  3   ; SizeOf(...)
 ADD     ; + offset 
 ADD  1  ; + offset 
 LDI  
#debug usint curtainsStatus[i].pos
 LD   usint 25
 DIVL
 AND  $FF
 LEA  curtainsStatus
 LDX  i
#debug usint i
 SUB  1   ; Low range[1]
 RCHK 13   ; Range Check
 MUL  3   ; SizeOf(...)
 ADD     ; + offset 
 ADD  2  ; + offset 
 WRI 
#debug_left usint curtainsStatus[i].normPos
#srcline 77 ;      
#srcline 78 ;  end_for;
 LDX  i
 LD   1
 ADD  
 WRX  i
 JMP  prgMain_L1
prgMain_L2:
 NOP  -1
#srcline 79 ; (*
#srcline 80 ;  up_RT(CLK := up);
#srcline 81 ;  dw_RT(CLK := dw);
#srcline 83 ;  if (up_RT.Q and curtainsFB[1].outDw) or (dw_RT.Q and curtainsFB[1].outUp) then
#srcline 84 ;     curtainsFB[1].up := 0;
#srcline 85 ;     curtainsFB[1].dw := 0;
#srcline 86 ;     curtainsFB[1](stop := 1, upDwTime := curtUpDwTime) ;
#srcline 87 ;     test := 1;
#srcline 88 ;  else
#srcline 89 ;     curtainsFB[1](up := up, dw := dw, stop := STOP, upDwTime := curtUpDwTime) ;
#srcline 90 ;     up   := 0;
#srcline 91 ;     dw   := 0;
#srcline 92 ;     stop := 0;
#srcline 93 ;  end_if;  *)
#srcline 95 ;END_PROGRAM
 ULNK
RET
E     61
#endpou 


P     59
; Initialize retain global variables 
 LD   0
 SRC  byte __Init____curtainsFB
 LD   0
 LD   1736
 MOV  byte curtainsFB[0]
E     59

 

#srcfile ''
